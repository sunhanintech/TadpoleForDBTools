<?xml version="1.0" encoding="UTF-8" ?>
<!--
  Copyright (c) 2013 hangum.
  All rights reserved. This program and the accompanying materials
  are made available under the terms of the GNU Lesser Public License v2.1
  which accompanies this distribution, and is available at
  http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
  
  Contributors:
      hangum - initial API and implementation
-->
<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
    
<!-- 
	사용자가 실행 한 쿼리목록입니다.
 -->

<sqlMap namespace="Tadpole-System-ExecuteSQL">
    
    <!-- 
	=========================================================================================================
	executed_sql_resource 정보를 설정합니다.
	=========================================================================================================
 -->
<insert id="userExecuteSQLResourceInsert" parameterClass="com.hangum.tadpole.engine.query.dao.system.ExecutedSqlResourceDAO">
	INSERT INTO executed_sql_resource(user_seq, db_seq, types, startDateExecute, endDateExecute, duration, row, result, message, ipAddress, result_save_yn)
	VALUES(#user_seq#, #db_seq#, #types#, #startDateExecute#, #endDateExecute#, #duration#, #row#, #result#, #message#, #ipAddress#, #result_save_yn#)
	
	<selectKey resultClass="com.hangum.tadpole.engine.query.dao.system.ExecutedSqlResourceDAO">
		SELECT max(seq) seq
		FROM executed_sql_resource 
		WHERE user_seq = #user_seq# 
			AND db_seq = #db_seq#
	</selectKey>
</insert>

<!-- 
	execute sql resource data를 저장합니다.
 -->
<insert id="userExecuteSQLResourceDataInsert" parameterClass="com.hangum.tadpole.engine.query.dao.system.ExecutedSqlResourceDataDAO">
	INSERT INTO executed_sql_resource_data(startDateExecute, executed_sql_resource_seq, sql_data, queryDetails)
	VALUES(#startDateExecute#, #executed_sql_resource_seq#, #sql_data#, #queryDetails#)
</insert>

<!-- 
	execute sql result data를 저장합니다.
 -->
<insert id="InsertExecuteSQLResultData" parameterClass="com.hangum.tadpole.engine.query.dao.system.ExecutedSQLResultDataDAO">
	INSERT INTO executed_sql_result_data(startDateExecute, executed_sql_resource_seq, result_data)
	VALUES(#startDateExecute#, #executed_sql_resource_seq#, #result_data#)
</insert>

<select id="getExecuteResultData" resultClass="com.hangum.tadpole.engine.query.dao.system.ExecutedSQLResultDataDAO" parameterClass="java.lang.Long">
	SELECT * FROM executed_sql_result_data
	WHERE executed_sql_resource_seq = #seq#
	order by seq
</select>

<!-- 
	쿼리의 실행 히스토리를 얻습니다.
	이것은 현재 메인에디터의 실행 한 쿼리에서 사용합니다.
 -->
<select id="getExecuteQueryHistoryAPIDetail" resultClass="java.util.HashMap" parameterClass="java.util.Map">
 	SELECT 
 			b.executed_sql_resource_seq, 
 			a.types,
 			a.duration,
 			a.startdateexecute, 
 			a.enddateexecute,
 			a.message, 
 			b.sql_data, 
 			a.row, 
 			a.result,
 			a.result_save_yn,
 		   	db.display_name, 
 		   	a.ipaddress, 
 		   	db.seq as dbseq,
 		   	role.description
	 FROM 
		 executed_sql_resource a,
		 executed_sql_resource_data b,
		 tadpole_db db,
		 tadpole_user_db_role role
	where 1=1 AND
	 <isNotNull property="db_seq">
	  a.db_seq in ($db_seq$) AND 
	 </isNotNull>
 <![CDATA[
	  	  a.delyn = 'NO'
        and role.delyn = 'NO'
        and a.db_seq    = role.db_seq 
	  AND a.seq = b.executed_sql_resource_seq 
	  AND a.startdateexecute >= #startTime# 
      AND a.enddateexecute <= #endTime# 
      AND a.duration >= #duration# 
      AND b.sql_data like #strSearch#  
      AND a.db_seq = db.seq
      AND a.result LIKE #result#
 ]]>	       
      <isNotNull property="type">
      	AND a.types = #type#
      </isNotNull>	
      group by b.executed_sql_resource_seq, 
 			a.types,
 			a.duration,
 			a.startdateexecute, 
 			a.enddateexecute,
 			a.message, 
 			b.sql_data, 
 			a.row, 
 			a.result,
 			a.result_save_yn,
 		   	db.display_name, 
 		   	a.ipaddress, 
 		   	dbseq,
 		   	role.description
	order by a.create_time 
	limit #_indexStart#, #_indexEnd#
</select>

<!-- 
	쿼리의 실행 히스토리를 얻습니다.
	이것은 현재 메인에디터의 실행 한 쿼리에서 사용합니다.
 -->
<select id="getExecuteQueryHistoryDetail" resultClass="java.util.HashMap" parameterClass="java.util.Map">
 	SELECT 
 			b.executed_sql_resource_seq, 
 			a.types,
 			a.duration,
 			a.startdateexecute, 
 			a.enddateexecute,
 			a.message, 
 			b.sql_data, 
 			b.queryDetails,
 			a.row, 
 			a.result,
 			a.result_save_yn,
 		   	u.email,
 		   	u.name, 
 		   	db.display_name, 
 		   	a.ipaddress, 
 		   	db.seq as dbseq, 
 		   	role.description
	 FROM 
		 executed_sql_resource a,
		 executed_sql_resource_data b,
		 tadpole_user u,
		 tadpole_db db,
		 tadpole_user_db_role role
	where 1=1 
	 <isNotNull property="db_seq">
	  AND  a.db_seq in ($db_seq$) 
	 </isNotNull>
 <![CDATA[
 		AND a.user_seq  = role.user_seq  
        and role.delyn = 'NO'
        and a.db_seq    = role.db_seq 
        and u.seq = role.user_seq
	  AND a.delyn = 'NO' 
	  AND u.email like #email#
	  AND a.seq = b.executed_sql_resource_seq 
	  AND a.startdateexecute >= #startTime#   
      AND a.enddateexecute <= #endTime# 
      AND a.duration >= #duration# 
      AND a.user_seq = u.seq 
      AND b.sql_data like #strSearch#  
      AND a.db_seq = db.seq 
      AND a.result LIKE #result#
]]>	
      
       <isNotNull property="type">
      	AND a.types = #type#
      </isNotNull>
    group by b.executed_sql_resource_seq,      a.types,     a.duration,     a.startdateexecute,      a.enddateexecute,
        a.message,      b.sql_data,      a.row,      a.result,        a.result_save_yn, u.email,        
        u.name,         db.display_name,         a.ipaddress,        dbseq, role.description  	
	order by a.create_time 
	limit #_indexStart#, #_indexEnd#

</select>

<select id="getQueryHistoryTotalRowCount" resultClass="java.lang.Integer" parameterClass="java.util.Map">
 	SELECT COUNT(*)
	 FROM 
		 executed_sql_resource a,
		 executed_sql_resource_data b,
		 tadpole_user u,
		 tadpole_db db,
		 tadpole_user_db_role role
	where 1=1 
	 <isNotNull property="db_seq">
	  AND  a.db_seq in ($db_seq$) 
	 </isNotNull>
 <![CDATA[
 		AND a.user_seq  = role.user_seq  
        and role.delyn = 'NO'
        and a.db_seq    = role.db_seq 
        and u.seq = role.user_seq
	  AND a.delyn = 'NO' 
	  AND u.email like #email#
	  AND a.seq = b.executed_sql_resource_seq 
	  AND a.startdateexecute >= #startTime#   
      AND a.enddateexecute <= #endTime# 
      AND a.duration >= #duration# 
      AND a.user_seq = u.seq 
      AND b.sql_data like #strSearch#  
      AND a.db_seq = db.seq 
      AND a.result LIKE #result#
]]>	
      
       <isNotNull property="type">
      	AND a.types = #type#
      </isNotNull>	

</select>

<!-- 
	쿼리의 실행 히스토리를 얻습니다.
	이것은 현재 메인에디터의 실행 한 쿼리에서 사용합니다.
 -->
<select id="getExecuteQueryHistory" resultClass="java.util.HashMap" parameterClass="java.util.Map">
	 SELECT a.duration, b.executed_sql_resource_seq, a.startdateexecute, a.enddateexecute, b.sql_data, a.row, a.result, a.message
	 FROM 
	 executed_sql_resource a,
	 executed_sql_resource_data b
	where a.user_seq = #user_seq# AND
	  a.db_seq = #db_seq# AND 
	  a.delyn = 'NO' AND
	  a.seq = b.executed_sql_resource_seq AND
	  b.sql_data like #filter#
	order by a.create_time desc
	limit #count#	
</select>

</sqlMap>
    